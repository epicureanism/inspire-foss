<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="2.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:GN="urn:x-inspire:specification:gmlas:GeographicalNames:3.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:gml="http://www.opengis.net/gml/3.2" xmlns:base="urn:x-inspire:specification:gmlas:BaseTypes:3.2" xmlns:gmd="http://www.isotc211.org/2005/gmd">
	<xsl:output method="xml" version="1.0" encoding="UTF-8" indent="yes"/>
	<xsl:template match="GN:NamedPlace" name="NAMEDPLACE">
		<GN:NamedPlace xmlns:gml="http://www.opengis.net/gml/3.2">
			<xsl:attribute name="gml:id"><xsl:value-of select="GN:NamedPlace/@gml:id" xmlns:gml="http://www.opengis.net/gml"/></xsl:attribute>
			<xsl:apply-templates select="GN:NamedPlace"/>
		</GN:NamedPlace>
	</xsl:template>
	<xsl:template match="GN:NamedPlace" name="NamedPlaceTemplate">
		<GN:beginLifespanVersion xsi:nil="true" nilReason="UNKNOWN"/>
		<GN:endLifespanVersion xsi:nil="true" nilReason="UNKNOWN"/>
		<!-- We assume geometry will only be points-->
		<xsl:element name="GN:geometry">
			<xsl:element name="gml:Point">
				<xsl:attribute name="srsName"><xsl:value-of select="GN:geometry/gml:Point/@srsName" xmlns:gml="http://www.opengis.net/gml"/></xsl:attribute>
				<xsl:attribute name="gml:id"><xsl:value-of select="concat('ID_',GN:inspireId/GN:Identifier/GN:localId)"/></xsl:attribute>
				<gml:pos>
					<xsl:value-of select="GN:geometry/gml:Point/gml:pos" xmlns:gml="http://www.opengis.net/gml"/>
				</gml:pos>
			</xsl:element>
		</xsl:element>
		<xsl:element name="GN:inspireId">
			<base:Identifier>
				<base:localId>
					<xsl:value-of select="GN:inspireId/GN:Identifier/GN:localId"/>
				</base:localId>
				<base:namespace>
					<xsl:value-of select="GN:inspireId/GN:Identifier/GN:namespace"/>
				</base:namespace>
			</base:Identifier>
		</xsl:element>
		<!--
		<xsl:element name="GN:leastDetailedViewingResolution">
			<gmd:MD_Resolution>
				<xsl:choose>
					<xsl:when test="GN:equivalentScale != ''">
						<gmd:equivalentScale>
							<xsl:value-of select="GN:MD_Resolution/GN:equivalentScale"/>
						</gmd:equivalentScale>
					</xsl:when>
					 <xsl:otherwise>
						<gmd:equivalentScale>
							<xsl:value-of select="GN:MD_Resolution/GN:distance"/>
						</gmd:equivalentScale>
					 </xsl:otherwise>
				</xsl:choose>
			</gmd:MD_Resolution>
		</xsl:element>
		-->
		<xsl:choose>
			<xsl:when test="GN:localType != ''">
				<xsl:for-each select="GN:localType">
					<GN:localType>
						<xsl:element name="gmd:LocalisedCharacterString">
							<xsl:attribute name="locale"><xsl:value-of select="concat(GN:LocalType/GN:LocalisedCharacterString/GN:LocalisedCharacterString/GN:language,'-',GN:LocalType/GN:LocalisedCharacterString/GN:LocalisedCharacterString/GN:country)"/></xsl:attribute>
							<xsl:value-of select="GN:LocalType/GN:LocalisedCharacterString/GN:LocalisedCharacterString/GN:text"/>
						</xsl:element>
					</GN:localType>
				</xsl:for-each>
			</xsl:when>
			<xsl:otherwise>
				<GN:localType xsi:nil="true"/>
			</xsl:otherwise>
		</xsl:choose>
		<xsl:for-each select="GN:name">
			<xsl:element name="GN:name">
				<xsl:element name="GN:GeographicalName">
					<GN:language>
						<xsl:value-of select="GN:GeographicalName/GN:language"/>
					</GN:language>
					<GN:nativeness>
						<xsl:value-of select="GN:GeographicalName/GN:nativeness"/>
					</GN:nativeness>
					<GN:nameStatus>
						<xsl:value-of select="GN:GeographicalName/GN:nameStatus"/>
					</GN:nameStatus>
					<GN:sourceOfName>
						<xsl:value-of select="GN:GeographicalName/GN:sourceOfName"/>
					</GN:sourceOfName>
					<GN:pronunciation xsi:nil="true"/>
					<GN:spelling>
						<GN:SpellingOfName>
							<GN:text>
								<xsl:value-of select="GN:GeographicalName/GN:spelling/GN:SpellingOfName/GN:text"/>
							</GN:text>
							<GN:script>
								<xsl:value-of select="GN:GeographicalName/GN:spelling/GN:SpellingOfName/GN:script"/>
							</GN:script>
						</GN:SpellingOfName>
					</GN:spelling>
					<GN:grammaticalGender>
						<xsl:value-of select="GN:GeographicalName/GN:grammaticalGender"/>
					</GN:grammaticalGender>
					<GN:grammaticalNumber>
						<xsl:value-of select="GN:GeographicalName/GN:grammaticalNumber"/>
					</GN:grammaticalNumber>
				</xsl:element>
			</xsl:element>
		</xsl:for-each>
		<!--GN:type is voidable and can occur multiple times -->
		<xsl:choose>
			<xsl:when test="GN:type != ''">
				<xsl:for-each select="GN:type">
					<GN:type>
						<xsl:value-of select="GN:NamedPlaceType/GN:code"/>
					</GN:type>
				</xsl:for-each>
			</xsl:when>
			<xsl:otherwise>
				<GN:type xsi:nil="true" nilReason="UNKNOWN"/>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<!--
	<xsl:template match="*">
		<xsl:element name="{local-name()}">
			<xsl:apply-templates select="@*|node()"/>
		</xsl:element>
	</xsl:template>
	<xsl:template match="@*">
		<xsl:attribute name="{local-name()}"><xsl:value-of select="."/></xsl:attribute>
	</xsl:template>
	<xsl:template match="@*|node()">
		<xsl:copy>
			<xsl:apply-templates select="@*|node()"/>
		</xsl:copy>
	</xsl:template>
	-->
</xsl:stylesheet>
